

navigate_to_lights:
  alias: 'Navigate - Lights'
  sequence:
    - service: browser_mod.navigate
      data:
        navigation_path: /lovelace/0
        deviceID:
          - tablet


navigate_to_cleanup:
  alias: 'Navigate - Cleanup'
  sequence:
    - service: browser_mod.navigate
      data:
        navigation_path: /lovelace/1
        deviceID:
          - tablet

navigate_to_media:
  alias: 'Navigate - Media'
  sequence:
    - service: browser_mod.navigate
      data:
        navigation_path: /lovelace/2
        deviceID:
          - tablet

navigate_to_weather:
  alias: 'Navigate - Weather'
  sequence:
    - service: browser_mod.navigate
      data:
        navigation_path: /lovelace/3
        deviceID:
          - tablet

navigate_to_health:
  alias: 'Navigate - Health'
  sequence:
    - service: browser_mod.navigate
      data:
        navigation_path: /lovelace/4
        deviceID:
          - tablet

## Switch Audio when projector is turned on

audio_input_projector:
  alias: 'Set Audio: Projector'
  sequence:
    - service: broadlink.send
      data:
        host: 192.168.178.185
        packet: 'JgBYAAABJ5UUERMTFRAVERIUFBETExI4FRATExURFBESOBU1FTUSFBMSFTUSFBM3EhQSExQ2EzcSOBQREzgSExM3EjgTEhMUEAAFpwABKEoTAAxVAAEnSxUADQU==='
        
audio_input_bluetooth:
  alias: 'Set Audio: Bluetooth'
  sequence:
    - service: broadlink.send
      data:
        host: 192.168.178.185
        packet: 'JgBYAAABKpEVERIUFBETExUQFRIRFBQ2FBIRFBQRExMVNRU1EjgVEBUREjgVNRU1EhQUERU2ETgVNRUREhMVERI4EzcUERMTFAAFpAABKkgSAAxWAAEnSxMADQU==='


####  Only one media player play at a time ####  
plex_moviestarted:
  alias: 'Pause Music'
  sequence:
    - service: scene.turn_on
      data:
        entity_id:  scene.plex
    - service: media_player.media_pause
      data:
        entity_id: media_player.spotify
    - service: browser_mod.close_popup
    
    
plex_continuemovie:
  alias: 'Continue Movie'
  sequence:
    - service: media_player.media_play
      data:
        entity_id: media_player.plex_projector
    - service: browser_mod.close_popup
    
    
####  Slowly lighten the room when a movie ends ####  
slowly_turn_on_livingroom:
  alias: 'Slowly On Living Room'
  sequence:
    - service: light.turn_on
      data: 
        entity_id: light.plant_table
        brightness: 150
        color_temp: 360
    - service: light.turn_on
      data:
        entity_id: light.table
        brightness: 150
        color_temp: 360

        
speak_sugar_level:
    alias: 'Ask Google for Sugar Level'
    sequence:
    - delay:
        seconds: 1
    - service: tts.google_say
      entity_id:
        - media_player.home_hub
      data_template:
        message: >-
          Luke's sugar level is {{states('sensor.luke_cgm_sgv_mmol')}}       
    
####  Scripts for Xiaomi Robot room by room cleaning ####  
## (To do this, robot must ONLY use zoned cleaning, otherwise the map will reorient itself! :S )

clean_kitchen:
  alias: 'Clean Kitchen'
  sequence:
    - condition: template
      value_template: "{{ is_state('input_text.room_cleaning','charging') or is_state('input_text.room_cleaning','none') or is_state('input_text.room_cleaning','goinghome') }}"
    # - service: vaccum.stop
    #   data:
    #     entity:_id: vacuum.xiaomi_vacuum_cleaner
    - service: vacuum.send_command
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        command: app_zoned_clean
        params:
          - [25200, 21500, 28400, 24100, 1]
    - service: input_text.set_value
      data_template:
        entity_id: input_text.room_cleaning
        value: "kitchen"
          
clean_livingroom:
  alias: 'Clean Living Room'
  sequence:
    - condition: template
      value_template: "{{ is_state('input_text.room_cleaning','charging') or is_state('input_text.room_cleaning','none') or is_state('input_text.room_cleaning','goinghome') or is_state('input_text.room_cleaning','paused') }}"
    # - service: vaccum.stop
    #   data:
    #     entity:_id: vacuum.xiaomi_vacuum_cleaner
    - service: vacuum.send_command
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        command: app_zoned_clean
        params:
          - [25200,18600, 25200,18600, 1]
    - service: input_text.set_value
      data_template:
        entity_id: input_text.room_cleaning
        value: "livingroom"         
          
          
clean_study:
  alias: 'Clean Study'
  sequence:
    - condition: template
      value_template: "{{ is_state('input_text.room_cleaning','charging') or is_state('input_text.room_cleaning','none') or is_state('input_text.room_cleaning','goinghome') or is_state('input_text.room_cleaning','paused') }}"
    # - service: vaccum.stop
    #   data:
    #     entity:_id: vacuum.xiaomi_vacuum_cleaner
    - service: vacuum.send_command
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        command: app_zoned_clean
        params:
          - [31000, 20900, 34000, 22800, 1]
    - service: input_text.set_value
      data_template:
        entity_id: input_text.room_cleaning
        value: "study"          
          
          
clean_bedroom:
  alias: 'Clean Bedroom'
  sequence:
    - condition: template
      value_template: "{{ is_state('input_text.room_cleaning','charging') or is_state('input_text.room_cleaning','none') or is_state('input_text.room_cleaning','goinghome') or is_state('input_text.room_cleaning','paused') }}"
    # - service: vaccum.stop
    #   data:
    #     entity:_id: vacuum.xiaomi_vacuum_cleaner
    - service: vacuum.send_command
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        command: app_zoned_clean
        params:
          - [31000, 22900 ,34000, 28000, 1]
    - service: input_text.set_value
      data_template:
        entity_id: input_text.room_cleaning
        value: "bedroom"
          
          
clean_house:
  alias: 'Clean House'
  sequence:
    - condition: template
      value_template: "{{ is_state('input_text.room_cleaning','charging') or is_state('input_text.room_cleaning','none') or is_state('input_text.room_cleaning','goinghome') or is_state('input_text.room_cleaning','paused') }}"
    # - service: vaccum.stop
    #   data:
    #     entity:_id: vacuum.xiaomi_vacuum_cleaner
    - service: vacuum.send_command
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        command: app_zoned_clean
        params:
          - [25600, 25200 ,34000, 18600, 1]
    - service: input_text.set_value
      data_template:
        entity_id: input_text.room_cleaning
        value: "house"        
        

stop_cleaning:
  alias: 'Stop Cleaning'
  sequence:
    - service: vaccum.stop
      data:
        entity:_id: vacuum.xiaomi_vacuum_cleaner
    - service: vacuum.return_to_base
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner   
    - service: input_text.set_value
      data_template:
        entity_id: input_text.room_cleaning
        value: "none"
        
        
clean_nothing:
  alias: 'Clean Stopping'
  sequence:
    - service: input_text.set_value
      data_template:
        entity_id: input_text.room_cleaning
        value: "none"    